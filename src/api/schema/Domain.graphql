type Domain {
  _id: String!
  name: String!
  key: String!
  # subDomains(options: ListSubDomainsOptions!): SubDomainRelationship
}

input ListSubDomainsOptions {
  pagination: PaginationOptions
}

input CreateDomainPayload {
  name: String!
  key: String!
}

input UpdateDomainPayload {
  name: String
  key: String
}

type DeleteDomainResponse {
  _id: String!
  success: Boolean!
}
type Query {
  getDomainByKey(key: String!): Domain!
}

type Mutation {
  createDomain(payload: CreateDomainPayload!): Domain!
  updateDomain(id: String!, payload: UpdateDomainPayload!): Domain!
  deleteDomain(id: String!): DeleteDomainResponse!
}
